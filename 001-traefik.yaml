version: '3.7'
services:
  traefik:
    image: 'traefik:v3.0'
    container_name: traefik
    restart: unless-stopped
    command:
      - '--log.level=INFO'
      - '--accesslog=true'
      - '--accessLog.filePath=/var/log/access.log'
      - '--accessLog.filters.statusCodes=400-499'
      - '--entrypoints.web.address=:80'
      - '--entrypoints.web.http.redirections.entryPoint.to=websecure'
      - '--entrypoints.web.http.redirections.entryPoint.scheme=https'
      - '--entrypoints.websecure.address=:443'
      - '--providers.docker=true'
      - '--providers.docker.exposedByDefault=false'
      - '--api=true'
      - '--metrics.prometheus.addrouterslabels=true'
      #- '--certificatesResolvers.letsencrypt.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory'
      - '--certificatesresolvers.letsencrypt.acme.dnschallenge=true'
      - '--certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare'
      - '--certificatesresolvers.letsencrypt.acme.dnschallenge.delaybeforecheck=15'
      - '--certificatesresolvers.letsencrypt.acme.dnschallenge.resolvers=1.1.1.1:53,1.0.0.1:53'
      - '--entrypoints.websecure.http.tls.domains[0].main=${websecure_main}'
      - '--entrypoints.websecure.http.tls.domains[0].sans=${websecure_sans}'
    environment:
      - CLOUDFLARE_EMAIL=${cloudflare_email}
      - CLOUDFLARE_DNS_API_TOKEN=${cloudflare_api_token}
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.traefik.entrypoints=websecure'
      #- 'traefik.http.routers.traefik-https.middlewares=to-https'
      #- 'traefik.http.middlewares.to-https.redirectscheme.scheme=https'
      #- 'traefik.http.routers.to-https.rule=HostRegexp(`{host:.+}`)'
      #- 'traefik.http.routers.to-https.entrypoints=http'
      - 'traefik.http.routers.traefik.rule=Host(`${traefik_domain}`)'
      - 'traefik.http.routers.traefik.service=api@internal'
      - 'traefik.http.routers.traefik.tls=true'
      - 'traefik.http.routers.traefik.tls.certresolver=letsencrypt'
      - 'traefik.docker.network=proxy'
      - 'traefik.http.routers.traefik.middlewares=auth'
      - 'traefik.http.middlewares.auth.basicauth.users=${tr_basicauth_user}:${tr_basicauth_passwd}'
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - './data/letsencrypt:/letsencrypt'
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
      - '/var/log/traefik:/var/log'
    networks:
      - proxy

  whoami:
    image: containous/whoami
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.whoami.rule=Host(`${whoami_domain}`)'
      - 'traefik.http.routers.whoami.entrypoints=websecure'
      - 'traefik.http.routers.whoami.tls=true'
      #- 'traefik.http.routers.whoami-https.middlewares=to-https'
      #- 'traefik.http.middlewares.to-https.redirectscheme.scheme=https'
      - 'traefik.http.routers.whoami.middlewares=auth'
      - 'traefik.http.middlewares.auth.basicauth.users=${tr_basicauth_user}:${tr_basicauth_passwd}'
      - 'traefik.http.routers.whoami.tls.certresolver=letsencrypt'
    networks:
      - proxy

networks:
  proxy:
    external: true
  intern:
#    external: true
