version: '3.7'
services:
  traefik:
    image: 'traefik:v3.0'
    container_name: traefik
    restart: unless-stopped
    command:
      - '--log.level=INFO'
      - '--accesslog=true'
      - '--accessLog.filePath=/var/log/access.log'
      - '--accessLog.filters.statusCodes=400-499'
      - '--entrypoints.web.address=:80'
      - '--entrypoints.web.http.redirections.entryPoint.to=websecure'
      - '--entrypoints.web.http.redirections.entryPoint.scheme=https'
      - '--entrypoints.websecure.address=:443'
      - '--providers.docker=true'
      - '--providers.docker.exposedByDefault=false'
      - '--api=true'
      - '--metrics.prometheus.addrouterslabels=true'
      #- '--certificatesResolvers.letsencrypt.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory'
      - '--certificatesresolvers.letsencrypt.acme.dnschallenge=true'
      - '--certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare'
      - '--certificatesresolvers.letsencrypt.acme.dnschallenge.delaybeforecheck=15'
      - '--certificatesresolvers.letsencrypt.acme.dnschallenge.resolvers=1.1.1.1:53,1.0.0.1:53'
      - '--entrypoints.websecure.http.tls.domains[0].main=${websecure_main}'
      - '--entrypoints.websecure.http.tls.domains[0].sans=${websecure_sans}'
    environment:
      - CLOUDFLARE_EMAIL=${cloudflare_email}
      - CLOUDFLARE_DNS_API_TOKEN=${cloudflare_api_token}
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.traefik.entrypoints=websecure'
      #- 'traefik.http.routers.traefik-https.middlewares=to-https'
      #- 'traefik.http.middlewares.to-https.redirectscheme.scheme=https'
      #- 'traefik.http.routers.to-https.rule=HostRegexp(`{host:.+}`)'
      #- 'traefik.http.routers.to-https.entrypoints=http'
      - 'traefik.http.routers.traefik.rule=Host(`${traefik_domain}`)'
      - 'traefik.http.routers.traefik.service=api@internal'
      - 'traefik.http.routers.traefik.tls=true'
      - 'traefik.http.routers.traefik.tls.certresolver=letsencrypt'
      - 'traefik.docker.network=proxy'
      - 'traefik.http.routers.traefik.middlewares=auth'
      - 'traefik.http.middlewares.auth.basicauth.users=${tr_basicauth_user}:${tr_basicauth_passwd}'
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - './data/letsencrypt:/letsencrypt'
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
      - '/var/log/traefik:/var/log'
    networks:
      - proxy

  whoami:
    image: containous/whoami
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.whoami.rule=Host(`${whoami_domain}`)'
      - 'traefik.http.routers.whoami.entrypoints=websecure'
      - 'traefik.http.routers.whoami.tls=true'
      #- 'traefik.http.routers.whoami-https.middlewares=to-https'
      #- 'traefik.http.middlewares.to-https.redirectscheme.scheme=https'
      - 'traefik.http.routers.whoami.middlewares=auth'
      - 'traefik.http.middlewares.auth.basicauth.users=${tr_basicauth_user}:${tr_basicauth_passwd}'
      - 'traefik.http.routers.whoami.tls.certresolver=letsencrypt'
    networks:
      - proxy

  prometheus-1:
    image: prom/prometheus:v2.53.1
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus1_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus1.yaml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.max-block-duration=30m'
      - '--storage.tsdb.min-block-duration=30m'
      - '--web.enable-lifecycle'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9081:9090
    links:
      - cadvisor:cadvisor
      - alertmanager:alertmanager
    depends_on:
      - cadvisor
    restart: always
    networks:
      - intern

  prometheus-3:
    image: prom/prometheus:v2.53.1
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus3_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus3.yaml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.max-block-duration=30m'
      - '--storage.tsdb.min-block-duration=30m'
      - '--web.enable-lifecycle'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9083:9090
    links:
      - cadvisor:cadvisor
      - alertmanager:alertmanager
    depends_on:
      - cadvisor
    restart: always
    networks:
      - intern

  thanos-sidecar-1:
    image: quay.io/thanos/thanos:v0.31.0
    volumes:
      - ./thanos/:/etc/thanos/
      - prometheus1_data:/prometheus
    command:
      - 'sidecar'
      - '--tsdb.path=/prometheus'
      - '--prometheus.url=http://prometheus-1:9090'
      - '--grpc-address=0.0.0.0:10091'
      - '--http-address=0.0.0.0:10902'
      - '--objstore.config-file=/etc/thanos/bucket_config.yaml'
    depends_on:
      - prometheus-1
      - minio
    restart: always
    networks:
      - intern

  thanos-sidecar-3:
    image: quay.io/thanos/thanos:v0.31.0
    volumes:
      - ./thanos/:/etc/thanos/
      - prometheus3_data:/prometheus
    command:
      - 'sidecar'
      - '--tsdb.path=/prometheus'
      - '--prometheus.url=http://prometheus-3:9090'
      - '--grpc-address=0.0.0.0:10091'
      - '--http-address=0.0.0.0:10902'
      - '--objstore.config-file=/etc/thanos/bucket_config.yaml'
    depends_on:
      - prometheus-3
      - minio
    restart: always
    networks:
      - intern

  thanos-query-frontend:
    image: quay.io/thanos/thanos:v0.31.0
    command:
      - 'query-frontend'
      - '--http-address=0.0.0.0:10901'
      - '--query-frontend.downstream-url=http://thanos-querier:10902'
    ports:
      - 10901:10901
    depends_on:
      - thanos-querier
    restart: always
    networks:
      - intern
      - proxy

  thanos-querier:
    image: quay.io/thanos/thanos:v0.31.0
    command:
      - 'query'
      - '--grpc-address=0.0.0.0:10091'
      - '--http-address=0.0.0.0:10902'
      - '--query.replica-label=replica'
      - '--store=thanos-sidecar-1:10091'
      #- '--store=thanos-sidecar-2:10091'
      - '--store=thanos-sidecar-3:10091'
      #- '--store=thanos-sidecar-4:10091'
      - '--store=thanos-store-gateway:10091'
      - '--store=thanos-ruler:10091'
    ports:
      - 10902:10902
    depends_on:
      - thanos-sidecar-1
      #- thanos-sidecar-2
      - thanos-sidecar-3
      #- thanos-sidecar-4
    restart: always
    networks:
      - intern

  thanos-store-gateway:
    image: quay.io/thanos/thanos:v0.31.0
    volumes:
      - ./thanos/:/etc/thanos/
    command:
      - 'store'
      - '--grpc-address=0.0.0.0:10091'
      - '--http-address=0.0.0.0:10902'
      - '--data-dir=/tmp/thanos/store'
      - '--objstore.config-file=/etc/thanos/bucket_config.yaml'
    depends_on:
      - minio
    restart: always
    networks:
      - intern

  thanos-compactor:
    image: quay.io/thanos/thanos:v0.31.0
    volumes:
      - ./thanos/:/etc/thanos/
    command:
      - 'compact'
      - '--log.level=debug'
      - '--data-dir=/data'
      - '--objstore.config-file=/etc/thanos/bucket_config.yaml'
      - '--wait'
    depends_on:
      - minio
    restart: always
    networks:
      - intern

  thanos-ruler:
    image: quay.io/thanos/thanos:v0.31.0
    volumes:
      - ./thanos/:/etc/thanos/
    command:
      - 'rule'
      - '--grpc-address=0.0.0.0:10091'
      - '--http-address=0.0.0.0:10902'
      - '--log.level=debug'
      - '--data-dir=/data'
      - '--eval-interval=15s'
      - '--rule-file=/etc/thanos/*.rules.yaml'
      - '--alertmanagers.url=http://alertmanager:9093'
      - '--query=thanos-querier:10902'
      - '--objstore.config-file=/etc/thanos/bucket_config.yaml'
      - "--label=ruler_cluster=\"vegas\""
      - "--label=ruler_replica=\"r1\""
    ports:
      - 10903:10902
    depends_on:
      - minio
      - thanos-querier
    restart: always
    networks:
      - intern

  thanos-bucket-web:
    image: quay.io/thanos/thanos:v0.31.0
    volumes:
      - ./thanos/:/etc/thanos/
    command:
      - 'tools'
      - 'bucket'
      - 'web'
      - '--http-address=0.0.0.0:10902'
      - '--log.level=debug'
      - '--objstore.config-file=/etc/thanos/bucket_config.yaml'
      - '--refresh=5m'
      - '--timeout=2m'
      - '--label=replica'
    ports:
      - 10904:10902
    depends_on:
      - minio
    restart: always
    networks:
      - intern

  minio:
    image: minio/minio:RELEASE.2020-05-01T22-19-14Z
    volumes:
      - minio_data:/data
    entrypoint: sh
    command: -c 'mkdir -p /data/demo-bucket && /usr/bin/minio server /data'
    environment:
      - MINIO_ACCESS_KEY=${minio_access_key}
      - MINIO_SECRET_KEY=${minio_secret_key}
      - MINIO_PROMETHEUS_AUTH_TYPE=public
    ports:
      - 9000:9000
    networks:
      - intern

  node-exporter:
    image: prom/node-exporter:v1.8.1
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    restart: always
    networks:
      - intern

  alertmanager:
    image: prom/alertmanager:v0.27.0
    ports:
      - 9093:9093
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    restart: always
    command:
      - '--config.file=/etc/alertmanager/config.yaml'
      - '--storage.path=/alertmanager'
    networks:
      - proxy
      - intern

  cadvisor:
    image: gcr.io/google_containers/cadvisor:v0.36.0
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080
    restart: always
    networks:
      - intern

  grafana:
    image: grafana/grafana:10.4.5
    user: "104"
    depends_on:
      - prometheus-1
      #- prometheus-2
      - prometheus-3
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    restart: always
    networks:
      - proxy
      - intern


networks:
  proxy:
    external: true
  intern:
#    external: true

volumes:
    prometheus1_data: {}
#    prometheus2_data: {}
    prometheus3_data: {}
#    prometheus4_data: {}
    grafana_data: {}
    minio_data: {}